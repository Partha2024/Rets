// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Rets_API.Data;

#nullable disable

namespace Rets_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Rets_API.Models.Exercise", b =>
                {
                    b.Property<string>("ExerciseId")
                        .HasColumnType("text");

                    b.Property<string>("ExerciseImage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ExerciseName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ExerciseType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MuscleGroup")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PrimaryMuscle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ExerciseId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("Rets_API.Models.ExerciseLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LogId"));

                    b.Property<string>("ExerciseId")
                        .HasColumnType("text");

                    b.Property<int?>("Reps")
                        .HasColumnType("integer");

                    b.Property<int>("SessionId")
                        .HasColumnType("integer");

                    b.Property<int>("SetNumber")
                        .HasColumnType("integer");

                    b.Property<int?>("TimeInSeconds")
                        .HasColumnType("integer");

                    b.Property<float?>("Weight")
                        .HasColumnType("real");

                    b.HasKey("LogId");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("SessionId");

                    b.ToTable("ExerciseLogs");
                });

            modelBuilder.Entity("Rets_API.Models.Split", b =>
                {
                    b.Property<int>("SplitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SplitId"));

                    b.Property<string>("DefaultDay")
                        .HasColumnType("text");

                    b.Property<string>("SplitName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("SplitId");

                    b.ToTable("Splits");
                });

            modelBuilder.Entity("Rets_API.Models.SplitExercise", b =>
                {
                    b.Property<int>("SplitId")
                        .HasColumnType("integer");

                    b.Property<string>("ExerciseId")
                        .HasColumnType("text");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.HasKey("SplitId", "ExerciseId");

                    b.HasIndex("ExerciseId");

                    b.ToTable("SplitExercises");
                });

            modelBuilder.Entity("Rets_API.Models.WorkoutSession", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SessionId"));

                    b.Property<int>("SplitId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("SessionId");

                    b.HasIndex("SplitId");

                    b.ToTable("WorkoutSessions");
                });

            modelBuilder.Entity("Rets_API.Models.ExerciseLog", b =>
                {
                    b.HasOne("Rets_API.Models.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId");

                    b.HasOne("Rets_API.Models.WorkoutSession", "WorkoutSession")
                        .WithMany("ExerciseLogs")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("WorkoutSession");
                });

            modelBuilder.Entity("Rets_API.Models.SplitExercise", b =>
                {
                    b.HasOne("Rets_API.Models.Exercise", "Exercise")
                        .WithMany("SplitExercises")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rets_API.Models.Split", "Split")
                        .WithMany("SplitExercises")
                        .HasForeignKey("SplitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Split");
                });

            modelBuilder.Entity("Rets_API.Models.WorkoutSession", b =>
                {
                    b.HasOne("Rets_API.Models.Split", "Split")
                        .WithMany()
                        .HasForeignKey("SplitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Split");
                });

            modelBuilder.Entity("Rets_API.Models.Exercise", b =>
                {
                    b.Navigation("SplitExercises");
                });

            modelBuilder.Entity("Rets_API.Models.Split", b =>
                {
                    b.Navigation("SplitExercises");
                });

            modelBuilder.Entity("Rets_API.Models.WorkoutSession", b =>
                {
                    b.Navigation("ExerciseLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
